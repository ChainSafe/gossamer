// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// BabePreRuntimeDigest is an autogenerated mock type for the BabePreRuntimeDigest type
type BabePreRuntimeDigest struct {
	mock.Mock
}

// AuthorityIndex provides a mock function with given fields:
func (_m *BabePreRuntimeDigest) AuthorityIndex() uint32 {
	ret := _m.Called()

	var r0 uint32
	if rf, ok := ret.Get(0).(func() uint32); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint32)
	}

	return r0
}

// Decode provides a mock function with given fields: r
func (_m *BabePreRuntimeDigest) Decode(r io.Reader) error {
	ret := _m.Called(r)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader) error); ok {
		r0 = rf(r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Encode provides a mock function with given fields:
func (_m *BabePreRuntimeDigest) Encode() []byte {
	ret := _m.Called()

	var r0 []byte
	if rf, ok := ret.Get(0).(func() []byte); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// SlotNumber provides a mock function with given fields:
func (_m *BabePreRuntimeDigest) SlotNumber() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// Type provides a mock function with given fields:
func (_m *BabePreRuntimeDigest) Type() byte {
	ret := _m.Called()

	var r0 byte
	if rf, ok := ret.Get(0).(func() byte); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(byte)
	}

	return r0
}
