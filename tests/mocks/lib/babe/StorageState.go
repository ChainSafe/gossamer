// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	common "github.com/ChainSafe/gossamer/lib/common"
	mock "github.com/stretchr/testify/mock"

	storage "github.com/ChainSafe/gossamer/lib/runtime/storage"
)

// StorageState is an autogenerated mock type for the StorageState type
type StorageState struct {
	mock.Mock
}

// StoreTrie provides a mock function with given fields: ts
func (_m *StorageState) StoreTrie(ts *storage.TrieState) error {
	ret := _m.Called(ts)

	var r0 error
	if rf, ok := ret.Get(0).(func(*storage.TrieState) error); ok {
		r0 = rf(ts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TrieState provides a mock function with given fields: hash
func (_m *StorageState) TrieState(hash *common.Hash) (*storage.TrieState, error) {
	ret := _m.Called(hash)

	var r0 *storage.TrieState
	if rf, ok := ret.Get(0).(func(*common.Hash) *storage.TrieState); ok {
		r0 = rf(hash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*storage.TrieState)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*common.Hash) error); ok {
		r1 = rf(hash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
