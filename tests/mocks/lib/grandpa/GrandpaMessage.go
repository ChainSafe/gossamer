// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	network "github.com/ChainSafe/gossamer/dot/network"
	mock "github.com/stretchr/testify/mock"
)

// GrandpaMessage is an autogenerated mock type for the GrandpaMessage type
type GrandpaMessage struct {
	mock.Mock
}

// ToConsensusMessage provides a mock function with given fields:
func (_m *GrandpaMessage) ToConsensusMessage() (*network.ConsensusMessage, error) {
	ret := _m.Called()

	var r0 *network.ConsensusMessage
	if rf, ok := ret.Get(0).(func() *network.ConsensusMessage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*network.ConsensusMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Type provides a mock function with given fields:
func (_m *GrandpaMessage) Type() byte {
	ret := _m.Called()

	var r0 byte
	if rf, ok := ret.Get(0).(func() byte); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(byte)
	}

	return r0
}
