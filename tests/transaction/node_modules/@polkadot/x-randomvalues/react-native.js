// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors
// SPDX-License-Identifier: Apache-2.0
// Adapted from https://github.com/LinusU/react-native-get-random-values/blob/85f48393821c23b83b89a8177f56d3a81dc8b733/index.js
// Copyright (c) 2018, 2020 Linus Unneb√§ck
// SPDX-License-Identifier: MIT
import { NativeModules } from 'react-native';
import { xglobal } from '@polkadot/x-global';
import { base64Decode } from "./base64.js";
import { getRandomValues as getRandomValuesGlobal } from "./browser.js";
import { insecureRandomValues } from "./fallback.js";
export { packageInfo } from "./packageInfo.js";

function getRandomValuesNative(output) {
  const bytes = base64Decode(NativeModules.RNGetRandomValues.getRandomBase64(output.length));

  for (let i = 0; i < bytes.length; i++) {
    output[i] = bytes[i];
  }

  return output;
}

export const getRandomValues = typeof xglobal.crypto === 'object' && typeof xglobal.crypto.getRandomValues === 'function' ? getRandomValuesGlobal : typeof xglobal.nativeCallSyncHook === 'undefined' || !NativeModules.ExpoRandom ? insecureRandomValues : getRandomValuesNative;