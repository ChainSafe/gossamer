// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	common "github.com/ChainSafe/gossamer/lib/common"
	mock "github.com/stretchr/testify/mock"

	network "github.com/ChainSafe/gossamer/dot/network"

	peer "github.com/libp2p/go-libp2p-core/peer"
)

// Network is an autogenerated mock type for the Network type
type Network struct {
	mock.Mock
}

// DoBlockRequest provides a mock function with given fields: to, req
func (_m *Network) DoBlockRequest(to peer.ID, req *network.BlockRequestMessage) (*network.BlockResponseMessage, error) {
	ret := _m.Called(to, req)

	var r0 *network.BlockResponseMessage
	if rf, ok := ret.Get(0).(func(peer.ID, *network.BlockRequestMessage) *network.BlockResponseMessage); ok {
		r0 = rf(to, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*network.BlockResponseMessage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(peer.ID, *network.BlockRequestMessage) error); ok {
		r1 = rf(to, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Peers provides a mock function with given fields:
func (_m *Network) Peers() []common.PeerInfo {
	ret := _m.Called()

	var r0 []common.PeerInfo
	if rf, ok := ret.Get(0).(func() []common.PeerInfo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]common.PeerInfo)
		}
	}

	return r0
}
