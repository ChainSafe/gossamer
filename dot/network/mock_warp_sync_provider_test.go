// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ChainSafe/gossamer/dot/network (interfaces: WarpSyncProvider)
//
// Generated by this command:
//
//	mockgen -destination=mock_warp_sync_provider_test.go -package network . WarpSyncProvider
//

// Package network is a generated GoMock package.
package network

import (
	reflect "reflect"

	common "github.com/ChainSafe/gossamer/lib/common"
	gomock "go.uber.org/mock/gomock"
)

// MockWarpSyncProvider is a mock of WarpSyncProvider interface.
type MockWarpSyncProvider struct {
	ctrl     *gomock.Controller
	recorder *MockWarpSyncProviderMockRecorder
}

// MockWarpSyncProviderMockRecorder is the mock recorder for MockWarpSyncProvider.
type MockWarpSyncProviderMockRecorder struct {
	mock *MockWarpSyncProvider
}

// NewMockWarpSyncProvider creates a new mock instance.
func NewMockWarpSyncProvider(ctrl *gomock.Controller) *MockWarpSyncProvider {
	mock := &MockWarpSyncProvider{ctrl: ctrl}
	mock.recorder = &MockWarpSyncProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWarpSyncProvider) EXPECT() *MockWarpSyncProviderMockRecorder {
	return m.recorder
}

// generate mocks base method.
func (m *MockWarpSyncProvider) generate(arg0 common.Hash) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "generate", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// generate indicates an expected call of generate.
func (mr *MockWarpSyncProviderMockRecorder) generate(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "generate", reflect.TypeOf((*MockWarpSyncProvider)(nil).generate), arg0)
}
