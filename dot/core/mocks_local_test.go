// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces_mock_source.go

// Package core is a generated GoMock package.
package core

import (
	json "encoding/json"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// Mocktelemetry is a mock of telemetry interface.
type Mocktelemetry struct {
	ctrl     *gomock.Controller
	recorder *MocktelemetryMockRecorder
}

// MocktelemetryMockRecorder is the mock recorder for Mocktelemetry.
type MocktelemetryMockRecorder struct {
	mock *Mocktelemetry
}

// NewMocktelemetry creates a new mock instance.
func NewMocktelemetry(ctrl *gomock.Controller) *Mocktelemetry {
	mock := &Mocktelemetry{ctrl: ctrl}
	mock.recorder = &MocktelemetryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mocktelemetry) EXPECT() *MocktelemetryMockRecorder {
	return m.recorder
}

// SendMessage mocks base method.
func (m *Mocktelemetry) SendMessage(msg json.Marshaler) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendMessage", msg)
}

// SendMessage indicates an expected call of SendMessage.
func (mr *MocktelemetryMockRecorder) SendMessage(msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendMessage", reflect.TypeOf((*Mocktelemetry)(nil).SendMessage), msg)
}
