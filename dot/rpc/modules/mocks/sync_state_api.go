// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	genesis "github.com/ChainSafe/gossamer/lib/genesis"
	mock "github.com/stretchr/testify/mock"
)

// SyncStateAPI is an autogenerated mock type for the SyncStateAPI type
type SyncStateAPI struct {
	mock.Mock
}

// GenSyncSpec provides a mock function with given fields: raw
func (_m *SyncStateAPI) GenSyncSpec(raw bool) (*genesis.Genesis, error) {
	ret := _m.Called(raw)

	var r0 *genesis.Genesis
	if rf, ok := ret.Get(0).(func(bool) *genesis.Genesis); ok {
		r0 = rf(raw)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*genesis.Genesis)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(bool) error); ok {
		r1 = rf(raw)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSyncStateAPI interface {
	mock.TestingT
	Cleanup(func())
}

// NewSyncStateAPI creates a new instance of SyncStateAPI. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSyncStateAPI(t mockConstructorTestingTNewSyncStateAPI) *SyncStateAPI {
	mock := &SyncStateAPI{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
