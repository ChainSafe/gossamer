// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ChainSafe/gossamer/lib/babe (interfaces: BlockImportHandler)
//
// Generated by this command:
//
//	mockgen -destination=mocks_babe_test.go -package modules github.com/ChainSafe/gossamer/lib/babe BlockImportHandler
//

// Package modules is a generated GoMock package.
package modules

import (
	reflect "reflect"

	types "github.com/ChainSafe/gossamer/dot/types"
	inmemory_storage "github.com/ChainSafe/gossamer/lib/runtime/storage/inmemory"
	gomock "go.uber.org/mock/gomock"
)

// MockBlockImportHandler is a mock of BlockImportHandler interface.
type MockBlockImportHandler struct {
	ctrl     *gomock.Controller
	recorder *MockBlockImportHandlerMockRecorder
}

// MockBlockImportHandlerMockRecorder is the mock recorder for MockBlockImportHandler.
type MockBlockImportHandlerMockRecorder struct {
	mock *MockBlockImportHandler
}

// NewMockBlockImportHandler creates a new mock instance.
func NewMockBlockImportHandler(ctrl *gomock.Controller) *MockBlockImportHandler {
	mock := &MockBlockImportHandler{ctrl: ctrl}
	mock.recorder = &MockBlockImportHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockImportHandler) EXPECT() *MockBlockImportHandlerMockRecorder {
	return m.recorder
}

// HandleBlockProduced mocks base method.
func (m *MockBlockImportHandler) HandleBlockProduced(arg0 *types.Block, arg1 *inmemory_storage.InMemoryTrieState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleBlockProduced", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// HandleBlockProduced indicates an expected call of HandleBlockProduced.
func (mr *MockBlockImportHandlerMockRecorder) HandleBlockProduced(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleBlockProduced", reflect.TypeOf((*MockBlockImportHandler)(nil).HandleBlockProduced), arg0, arg1)
}
