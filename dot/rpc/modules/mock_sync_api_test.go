// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ChainSafe/gossamer/dot/rpc/modules (interfaces: SyncAPI)

// Package modules is a generated GoMock package.
package modules

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSyncAPI is a mock of SyncAPI interface.
type MockSyncAPI struct {
	ctrl     *gomock.Controller
	recorder *MockSyncAPIMockRecorder
}

// MockSyncAPIMockRecorder is the mock recorder for MockSyncAPI.
type MockSyncAPIMockRecorder struct {
	mock *MockSyncAPI
}

// NewMockSyncAPI creates a new mock instance.
func NewMockSyncAPI(ctrl *gomock.Controller) *MockSyncAPI {
	mock := &MockSyncAPI{ctrl: ctrl}
	mock.recorder = &MockSyncAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSyncAPI) EXPECT() *MockSyncAPIMockRecorder {
	return m.recorder
}

// HighestBlock mocks base method.
func (m *MockSyncAPI) HighestBlock() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HighestBlock")
	ret0, _ := ret[0].(int64)
	return ret0
}

// HighestBlock indicates an expected call of HighestBlock.
func (mr *MockSyncAPIMockRecorder) HighestBlock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HighestBlock", reflect.TypeOf((*MockSyncAPI)(nil).HighestBlock))
}
