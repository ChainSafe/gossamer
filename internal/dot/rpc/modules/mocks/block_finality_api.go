// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	ed25519 "github.com/ChainSafe/gossamer/internal/lib/crypto/ed25519"
	mock "github.com/stretchr/testify/mock"

	types "github.com/ChainSafe/gossamer/internal/dot/types"
)

// BlockFinalityAPI is an autogenerated mock type for the BlockFinalityAPI type
type BlockFinalityAPI struct {
	mock.Mock
}

// GetRound provides a mock function with given fields:
func (_m *BlockFinalityAPI) GetRound() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// GetSetID provides a mock function with given fields:
func (_m *BlockFinalityAPI) GetSetID() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// GetVoters provides a mock function with given fields:
func (_m *BlockFinalityAPI) GetVoters() types.GrandpaVoters {
	ret := _m.Called()

	var r0 types.GrandpaVoters
	if rf, ok := ret.Get(0).(func() types.GrandpaVoters); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.GrandpaVoters)
		}
	}

	return r0
}

// PreCommits provides a mock function with given fields:
func (_m *BlockFinalityAPI) PreCommits() []ed25519.PublicKeyBytes {
	ret := _m.Called()

	var r0 []ed25519.PublicKeyBytes
	if rf, ok := ret.Get(0).(func() []ed25519.PublicKeyBytes); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]ed25519.PublicKeyBytes)
		}
	}

	return r0
}

// PreVotes provides a mock function with given fields:
func (_m *BlockFinalityAPI) PreVotes() []ed25519.PublicKeyBytes {
	ret := _m.Called()

	var r0 []ed25519.PublicKeyBytes
	if rf, ok := ret.Get(0).(func() []ed25519.PublicKeyBytes); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]ed25519.PublicKeyBytes)
		}
	}

	return r0
}
