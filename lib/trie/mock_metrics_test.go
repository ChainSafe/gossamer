// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ChainSafe/gossamer/lib/trie (interfaces: Metrics)

// Package trie is a generated GoMock package.
package trie

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetrics is a mock of Metrics interface.
type MockMetrics struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsMockRecorder
}

// MockMetricsMockRecorder is the mock recorder for MockMetrics.
type MockMetricsMockRecorder struct {
	mock *MockMetrics
}

// NewMockMetrics creates a new mock instance.
func NewMockMetrics(ctrl *gomock.Controller) *MockMetrics {
	mock := &MockMetrics{ctrl: ctrl}
	mock.recorder = &MockMetricsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetrics) EXPECT() *MockMetricsMockRecorder {
	return m.recorder
}

// NodesAdd mocks base method.
func (m *MockMetrics) NodesAdd(arg0 uint32) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NodesAdd", arg0)
}

// NodesAdd indicates an expected call of NodesAdd.
func (mr *MockMetricsMockRecorder) NodesAdd(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NodesAdd", reflect.TypeOf((*MockMetrics)(nil).NodesAdd), arg0)
}

// NodesSub mocks base method.
func (m *MockMetrics) NodesSub(arg0 uint32) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "NodesSub", arg0)
}

// NodesSub indicates an expected call of NodesSub.
func (mr *MockMetricsMockRecorder) NodesSub(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NodesSub", reflect.TypeOf((*MockMetrics)(nil).NodesSub), arg0)
}
