// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	types "github.com/ChainSafe/gossamer/dot/types"
	storage "github.com/ChainSafe/gossamer/lib/runtime/storage"
	mock "github.com/stretchr/testify/mock"
)

// BlockImportHandler is an autogenerated mock type for the BlockImportHandler type
type BlockImportHandler struct {
	mock.Mock
}

// HandleBlockProduced provides a mock function with given fields: block, state
func (_m *BlockImportHandler) HandleBlockProduced(block *types.Block, state *storage.TrieState) error {
	ret := _m.Called(block, state)

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.Block, *storage.TrieState) error); ok {
		r0 = rf(block, state)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewBlockImportHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewBlockImportHandler creates a new instance of BlockImportHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBlockImportHandler(t mockConstructorTestingTNewBlockImportHandler) *BlockImportHandler {
	mock := &BlockImportHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
