name: devnet
on:
  push:
    branches:
      - devnet

jobs:
  update:
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true

      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
          stable: true
          check-latest: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push alice image to Amazon ECR
        id: build-alice
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gssmr-devnet-alice
          IMAGE_TAG: ${{ github.sha }}
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
        run: |
          docker build --progress=plain \
          -t=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t=$ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --build-arg DD_API_KEY=$DD_API_KEY --build-arg METRICS_NAMESPACE=gossamer.ecs.devnet \
          -f=devnet/alice.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Build, tag, and push bob image to Amazon ECR
        id: build-bob
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gssmr-devnet-bob
          IMAGE_TAG: ${{ github.sha }}
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
        run: |
          docker build --progress=plain \
          -t=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t=$ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --build-arg key=bob --build-arg DD_API_KEY=$DD_API_KEY --build-arg METRICS_NAMESPACE=gossamer.ecs.devnet \
          -f=devnet/bob.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Build, tag, and push charlie image to Amazon ECR
        id: build-charlie
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: gssmr-devnet-charlie
          IMAGE_TAG: ${{ github.sha }}
          DD_API_KEY: ${{ secrets.DD_API_KEY }}
        run: |
          docker build --progress=plain \
          -t=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t=$ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --build-arg key=charlie --build-arg DD_API_KEY=$DD_API_KEY --build-arg METRICS_NAMESPACE=gossamer.ecs.devnet \
          -f=devnet/bob.Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Scale down existing Bob and Charlie
        id: scale-down
        working-directory: ./devnet/cmd/scale-down-ecs-service
        run: |
          go run . -c gssmr-ecs -s="gssmr-ecs-(Charlie|Bob)Service-.+$"

      - name: docker compose up
        id: docker-compose-up
        working-directory: ./devnet/gssmr-ecs
        run: |
          curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh
          docker context create ecs gssmr-ecs --from-env
          docker context use gssmr-ecs
          docker compose up
