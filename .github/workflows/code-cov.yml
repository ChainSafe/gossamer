on:
  pull_request:
    # Commented paths to avoid skipping required workflow
    # See https://github.community/t/feature-request-conditional-required-checks/16761
    # paths:
    #   - .github/workflows/code-cov.yml
    #   - "**/*.go"
    #   - "chain/**"
    #   - "cmd/**"
    #   - "dot/**"
    #   - "internal/**"
    #   - "lib/**"
    #   - "pkg/**"
    #   - "tests/**"
    #   - .codecov.yml
    #   - go.mod
    #   - go.sum
name: code-cov
env:
  GO111MODULE: on

jobs:
  publish-code-coverage:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - uses: actions/checkout@v3

      # cache go build cache
      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-build

      # cache go mod cache
      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-mod

      - name: Generate coverage report
        run: |
          go test ./... -short -coverprofile=coverage.out -covermode=atomic -timeout=20m
      - uses: codecov/codecov-action@v2.1.0
        with:
          if_ci_failed: success
          informational: true
          files: ./coverage.out
          flags: unit-tests
          name: coverage
          verbose: true
